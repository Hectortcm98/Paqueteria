//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL_EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ElectronicosEntities : DbContext
    {
        public ElectronicosEntities()
            : base("name=ElectronicosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Estado> Estadoes { get; set; }
        public virtual DbSet<Pai> Pais { get; set; }
        public virtual DbSet<Roll> Rolls { get; set; }
        public virtual DbSet<Colonia> Colonias { get; set; }
        public virtual DbSet<Direccion> Direccions { get; set; }
        public virtual DbSet<Municipio> Municipios { get; set; }
        public virtual DbSet<EstatusTransporte> EstatusTransportes { get; set; }
        public virtual DbSet<Transporte> Transportes { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
        public virtual DbSet<Repartidor> Repartidors { get; set; }
        public virtual DbSet<Paquete> Paquetes { get; set; }
    
        public virtual ObjectResult<RollGetAll_Result> RollGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RollGetAll_Result>("RollGetAll");
        }
    
        public virtual ObjectResult<PaisGetAll_Result> PaisGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaisGetAll_Result>("PaisGetAll");
        }
    
        public virtual ObjectResult<EstadoGetByIdPais_Result> EstadoGetByIdPais(Nullable<int> id_Pais)
        {
            var id_PaisParameter = id_Pais.HasValue ?
                new ObjectParameter("Id_Pais", id_Pais) :
                new ObjectParameter("Id_Pais", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EstadoGetByIdPais_Result>("EstadoGetByIdPais", id_PaisParameter);
        }
    
        public virtual ObjectResult<MunicipioGetByIdEstado_Result> MunicipioGetByIdEstado(Nullable<int> id_Estado)
        {
            var id_EstadoParameter = id_Estado.HasValue ?
                new ObjectParameter("Id_Estado", id_Estado) :
                new ObjectParameter("Id_Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MunicipioGetByIdEstado_Result>("MunicipioGetByIdEstado", id_EstadoParameter);
        }
    
        public virtual ObjectResult<ColoniaGetByIdMunicipio_Result> ColoniaGetByIdMunicipio(Nullable<int> id_Municipio)
        {
            var id_MunicipioParameter = id_Municipio.HasValue ?
                new ObjectParameter("Id_Municipio", id_Municipio) :
                new ObjectParameter("Id_Municipio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ColoniaGetByIdMunicipio_Result>("ColoniaGetByIdMunicipio", id_MunicipioParameter);
        }
    
        public virtual ObjectResult<GetAllEstatusTransporte_Result> GetAllEstatusTransporte()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEstatusTransporte_Result>("GetAllEstatusTransporte");
        }
    
        public virtual ObjectResult<GetAllTransporte_Result> GetAllTransporte()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllTransporte_Result>("GetAllTransporte");
        }
    
        public virtual ObjectResult<GetbyidTransporte_Result> GetbyidTransporte(Nullable<int> idTransporte)
        {
            var idTransporteParameter = idTransporte.HasValue ?
                new ObjectParameter("IdTransporte", idTransporte) :
                new ObjectParameter("IdTransporte", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetbyidTransporte_Result>("GetbyidTransporte", idTransporteParameter);
        }
    
        public virtual int TransporteAdd(string numeroPlaca, string modelo, Nullable<System.DateTime> añoFabricacion, Nullable<byte> idEstatus, string marca)
        {
            var numeroPlacaParameter = numeroPlaca != null ?
                new ObjectParameter("NumeroPlaca", numeroPlaca) :
                new ObjectParameter("NumeroPlaca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var añoFabricacionParameter = añoFabricacion.HasValue ?
                new ObjectParameter("AñoFabricacion", añoFabricacion) :
                new ObjectParameter("AñoFabricacion", typeof(System.DateTime));
    
            var idEstatusParameter = idEstatus.HasValue ?
                new ObjectParameter("IdEstatus", idEstatus) :
                new ObjectParameter("IdEstatus", typeof(byte));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TransporteAdd", numeroPlacaParameter, modeloParameter, añoFabricacionParameter, idEstatusParameter, marcaParameter);
        }
    
        public virtual int UpdateTransporte(Nullable<int> idTransporte, string numeroPlaca, string modelo, Nullable<System.DateTime> añoFabricacion, Nullable<byte> idEstatus, string marca)
        {
            var idTransporteParameter = idTransporte.HasValue ?
                new ObjectParameter("IdTransporte", idTransporte) :
                new ObjectParameter("IdTransporte", typeof(int));
    
            var numeroPlacaParameter = numeroPlaca != null ?
                new ObjectParameter("NumeroPlaca", numeroPlaca) :
                new ObjectParameter("NumeroPlaca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var añoFabricacionParameter = añoFabricacion.HasValue ?
                new ObjectParameter("AñoFabricacion", añoFabricacion) :
                new ObjectParameter("AñoFabricacion", typeof(System.DateTime));
    
            var idEstatusParameter = idEstatus.HasValue ?
                new ObjectParameter("IdEstatus", idEstatus) :
                new ObjectParameter("IdEstatus", typeof(byte));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTransporte", idTransporteParameter, numeroPlacaParameter, modeloParameter, añoFabricacionParameter, idEstatusParameter, marcaParameter);
        }
    
        public virtual int TransporteDelete(Nullable<int> idTransporte, string numeroPlaca, string modelo, Nullable<System.DateTime> añoFabricacion, string marca)
        {
            var idTransporteParameter = idTransporte.HasValue ?
                new ObjectParameter("IdTransporte", idTransporte) :
                new ObjectParameter("IdTransporte", typeof(int));
    
            var numeroPlacaParameter = numeroPlaca != null ?
                new ObjectParameter("NumeroPlaca", numeroPlaca) :
                new ObjectParameter("NumeroPlaca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var añoFabricacionParameter = añoFabricacion.HasValue ?
                new ObjectParameter("AñoFabricacion", añoFabricacion) :
                new ObjectParameter("AñoFabricacion", typeof(System.DateTime));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TransporteDelete", idTransporteParameter, numeroPlacaParameter, modeloParameter, añoFabricacionParameter, marcaParameter);
        }
    
        public virtual int UsuarioAdd(string nombre, string apellidoPaterno, string apellidoMaterno, string userName, string email, string password, Nullable<System.DateTime> fechaNacimiento, string sexo, string telefono, string celular, string cURP, string imagen, Nullable<int> id_Roll, string calle, string numeroInterior, string numeroExterior, Nullable<int> id_Colonia)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var cURPParameter = cURP != null ?
                new ObjectParameter("CURP", cURP) :
                new ObjectParameter("CURP", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            var id_RollParameter = id_Roll.HasValue ?
                new ObjectParameter("Id_Roll", id_Roll) :
                new ObjectParameter("Id_Roll", typeof(int));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var numeroInteriorParameter = numeroInterior != null ?
                new ObjectParameter("NumeroInterior", numeroInterior) :
                new ObjectParameter("NumeroInterior", typeof(string));
    
            var numeroExteriorParameter = numeroExterior != null ?
                new ObjectParameter("NumeroExterior", numeroExterior) :
                new ObjectParameter("NumeroExterior", typeof(string));
    
            var id_ColoniaParameter = id_Colonia.HasValue ?
                new ObjectParameter("Id_Colonia", id_Colonia) :
                new ObjectParameter("Id_Colonia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsuarioAdd", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, userNameParameter, emailParameter, passwordParameter, fechaNacimientoParameter, sexoParameter, telefonoParameter, celularParameter, cURPParameter, imagenParameter, id_RollParameter, calleParameter, numeroInteriorParameter, numeroExteriorParameter, id_ColoniaParameter);
        }
    
        public virtual int UsuarioDelete(Nullable<int> idUsuario, string nombre, string apellidoPaterno, string apellidoMaterno, string userName, string email, string password, Nullable<System.DateTime> fechaNacimiento, string sexo, string telefono, string celular, string cURP, string imagen)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var cURPParameter = cURP != null ?
                new ObjectParameter("CURP", cURP) :
                new ObjectParameter("CURP", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsuarioDelete", idUsuarioParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, userNameParameter, emailParameter, passwordParameter, fechaNacimientoParameter, sexoParameter, telefonoParameter, celularParameter, cURPParameter, imagenParameter);
        }
    
        public virtual int UsuarioUpdate(Nullable<int> idUsuario, string nombre, string apellidoPaterno, string apellidoMaterno, string userName, string email, string password, Nullable<System.DateTime> fechaNacimiento, string sexo, string telefono, string celular, string cURP, string imagen, Nullable<int> id_Roll, string calle, string numeroInterior, string numeroExterior, Nullable<int> id_Colonia, Nullable<int> id_Direccion)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var cURPParameter = cURP != null ?
                new ObjectParameter("CURP", cURP) :
                new ObjectParameter("CURP", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            var id_RollParameter = id_Roll.HasValue ?
                new ObjectParameter("Id_Roll", id_Roll) :
                new ObjectParameter("Id_Roll", typeof(int));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var numeroInteriorParameter = numeroInterior != null ?
                new ObjectParameter("NumeroInterior", numeroInterior) :
                new ObjectParameter("NumeroInterior", typeof(string));
    
            var numeroExteriorParameter = numeroExterior != null ?
                new ObjectParameter("NumeroExterior", numeroExterior) :
                new ObjectParameter("NumeroExterior", typeof(string));
    
            var id_ColoniaParameter = id_Colonia.HasValue ?
                new ObjectParameter("Id_Colonia", id_Colonia) :
                new ObjectParameter("Id_Colonia", typeof(int));
    
            var id_DireccionParameter = id_Direccion.HasValue ?
                new ObjectParameter("Id_Direccion", id_Direccion) :
                new ObjectParameter("Id_Direccion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsuarioUpdate", idUsuarioParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, userNameParameter, emailParameter, passwordParameter, fechaNacimientoParameter, sexoParameter, telefonoParameter, celularParameter, cURPParameter, imagenParameter, id_RollParameter, calleParameter, numeroInteriorParameter, numeroExteriorParameter, id_ColoniaParameter, id_DireccionParameter);
        }
    
        public virtual int CambioEstatus(Nullable<int> idUsuario, Nullable<bool> estatus)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var estatusParameter = estatus.HasValue ?
                new ObjectParameter("Estatus", estatus) :
                new ObjectParameter("Estatus", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambioEstatus", idUsuarioParameter, estatusParameter);
        }
    
        public virtual ObjectResult<Usuario_GetAll_Result> Usuario_GetAll(string nombre, string apellidoPaterno, string apellidoMaterno)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usuario_GetAll_Result>("Usuario_GetAll", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter);
        }
    
        public virtual ObjectResult<UsuarioById_Result> UsuarioById(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsuarioById_Result>("UsuarioById", idUsuarioParameter);
        }
    
        public virtual ObjectResult<GetByIdRepartidor_Result> GetByIdRepartidor(Nullable<int> idRepartidor)
        {
            var idRepartidorParameter = idRepartidor.HasValue ?
                new ObjectParameter("IdRepartidor", idRepartidor) :
                new ObjectParameter("IdRepartidor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByIdRepartidor_Result>("GetByIdRepartidor", idRepartidorParameter);
        }
    
        public virtual int AddPaquete(string instruccionEntrega, Nullable<decimal> peso, string direccionOrigen, string direccionEntrega, Nullable<System.DateTime> fechaEstimadaEntrega, string numeroGuia, byte[] codigoQR)
        {
            var instruccionEntregaParameter = instruccionEntrega != null ?
                new ObjectParameter("InstruccionEntrega", instruccionEntrega) :
                new ObjectParameter("InstruccionEntrega", typeof(string));
    
            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));
    
            var direccionOrigenParameter = direccionOrigen != null ?
                new ObjectParameter("DireccionOrigen", direccionOrigen) :
                new ObjectParameter("DireccionOrigen", typeof(string));
    
            var direccionEntregaParameter = direccionEntrega != null ?
                new ObjectParameter("DireccionEntrega", direccionEntrega) :
                new ObjectParameter("DireccionEntrega", typeof(string));
    
            var fechaEstimadaEntregaParameter = fechaEstimadaEntrega.HasValue ?
                new ObjectParameter("FechaEstimadaEntrega", fechaEstimadaEntrega) :
                new ObjectParameter("FechaEstimadaEntrega", typeof(System.DateTime));
    
            var numeroGuiaParameter = numeroGuia != null ?
                new ObjectParameter("NumeroGuia", numeroGuia) :
                new ObjectParameter("NumeroGuia", typeof(string));
    
            var codigoQRParameter = codigoQR != null ?
                new ObjectParameter("CodigoQR", codigoQR) :
                new ObjectParameter("CodigoQR", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddPaquete", instruccionEntregaParameter, pesoParameter, direccionOrigenParameter, direccionEntregaParameter, fechaEstimadaEntregaParameter, numeroGuiaParameter, codigoQRParameter);
        }
    
        public virtual ObjectResult<GetAllPaquete_Result> GetAllPaquete()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPaquete_Result>("GetAllPaquete");
        }
    
        public virtual ObjectResult<GetByIdPaquete_Result> GetByIdPaquete(Nullable<int> idPaquete)
        {
            var idPaqueteParameter = idPaquete.HasValue ?
                new ObjectParameter("IdPaquete", idPaquete) :
                new ObjectParameter("IdPaquete", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByIdPaquete_Result>("GetByIdPaquete", idPaqueteParameter);
        }
    
        public virtual ObjectResult<GetAllRepartidor_Result> GetAllRepartidor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllRepartidor_Result>("GetAllRepartidor");
        }
    
        public virtual int UpdatePassword(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePassword", emailParameter, passwordParameter);
        }
    
        public virtual int DeletePaquete(Nullable<int> idPaquete, string instruccionEntrega, Nullable<decimal> peso, string direccionOrigen, string direccionEntrega, Nullable<System.DateTime> fechaEstimadaEntrega, string numeroGuia, string codigoQR, Nullable<int> idRepartidor)
        {
            var idPaqueteParameter = idPaquete.HasValue ?
                new ObjectParameter("IdPaquete", idPaquete) :
                new ObjectParameter("IdPaquete", typeof(int));
    
            var instruccionEntregaParameter = instruccionEntrega != null ?
                new ObjectParameter("InstruccionEntrega", instruccionEntrega) :
                new ObjectParameter("InstruccionEntrega", typeof(string));
    
            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));
    
            var direccionOrigenParameter = direccionOrigen != null ?
                new ObjectParameter("DireccionOrigen", direccionOrigen) :
                new ObjectParameter("DireccionOrigen", typeof(string));
    
            var direccionEntregaParameter = direccionEntrega != null ?
                new ObjectParameter("DireccionEntrega", direccionEntrega) :
                new ObjectParameter("DireccionEntrega", typeof(string));
    
            var fechaEstimadaEntregaParameter = fechaEstimadaEntrega.HasValue ?
                new ObjectParameter("FechaEstimadaEntrega", fechaEstimadaEntrega) :
                new ObjectParameter("FechaEstimadaEntrega", typeof(System.DateTime));
    
            var numeroGuiaParameter = numeroGuia != null ?
                new ObjectParameter("NumeroGuia", numeroGuia) :
                new ObjectParameter("NumeroGuia", typeof(string));
    
            var codigoQRParameter = codigoQR != null ?
                new ObjectParameter("CodigoQR", codigoQR) :
                new ObjectParameter("CodigoQR", typeof(string));
    
            var idRepartidorParameter = idRepartidor.HasValue ?
                new ObjectParameter("IdRepartidor", idRepartidor) :
                new ObjectParameter("IdRepartidor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePaquete", idPaqueteParameter, instruccionEntregaParameter, pesoParameter, direccionOrigenParameter, direccionEntregaParameter, fechaEstimadaEntregaParameter, numeroGuiaParameter, codigoQRParameter, idRepartidorParameter);
        }
    
        public virtual int UpdatePaquete(Nullable<int> idPaquete, string instruccionEntrega, Nullable<decimal> peso, string direccionOrigen, string direccionEntrega, Nullable<System.DateTime> fechaEstimadaEntrega, string numeroGuia, string codigoQR)
        {
            var idPaqueteParameter = idPaquete.HasValue ?
                new ObjectParameter("IdPaquete", idPaquete) :
                new ObjectParameter("IdPaquete", typeof(int));
    
            var instruccionEntregaParameter = instruccionEntrega != null ?
                new ObjectParameter("InstruccionEntrega", instruccionEntrega) :
                new ObjectParameter("InstruccionEntrega", typeof(string));
    
            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));
    
            var direccionOrigenParameter = direccionOrigen != null ?
                new ObjectParameter("DireccionOrigen", direccionOrigen) :
                new ObjectParameter("DireccionOrigen", typeof(string));
    
            var direccionEntregaParameter = direccionEntrega != null ?
                new ObjectParameter("DireccionEntrega", direccionEntrega) :
                new ObjectParameter("DireccionEntrega", typeof(string));
    
            var fechaEstimadaEntregaParameter = fechaEstimadaEntrega.HasValue ?
                new ObjectParameter("FechaEstimadaEntrega", fechaEstimadaEntrega) :
                new ObjectParameter("FechaEstimadaEntrega", typeof(System.DateTime));
    
            var numeroGuiaParameter = numeroGuia != null ?
                new ObjectParameter("NumeroGuia", numeroGuia) :
                new ObjectParameter("NumeroGuia", typeof(string));
    
            var codigoQRParameter = codigoQR != null ?
                new ObjectParameter("CodigoQR", codigoQR) :
                new ObjectParameter("CodigoQR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePaquete", idPaqueteParameter, instruccionEntregaParameter, pesoParameter, direccionOrigenParameter, direccionEntregaParameter, fechaEstimadaEntregaParameter, numeroGuiaParameter, codigoQRParameter);
        }
    
        public virtual ObjectResult<GetByCodigo_Result> GetByCodigo(string codigoQR)
        {
            var codigoQRParameter = codigoQR != null ?
                new ObjectParameter("CodigoQR", codigoQR) :
                new ObjectParameter("CodigoQR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByCodigo_Result>("GetByCodigo", codigoQRParameter);
        }
    
        public virtual ObjectResult<UsuarioByEmail_Result> UsuarioByEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsuarioByEmail_Result>("UsuarioByEmail", emailParameter);
        }
    }
}
